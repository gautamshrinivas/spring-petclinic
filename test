

pipeline {
       agent { label 'spring' }
       parameters {
           string(name: 'MAVEN_GOAL', defaultValue: 'mvn package', description: 'To build maven')
           choice(name: 'BRACH_TO_BUILD', choices: ['main', 'VER_1'], description: 'Choose the branch')
                  }
       triggers {
           pollSCM ('* * * * *')
                }
       stages {
           stage ('vcs') {
            steps {
              git url: 'https://github.com/gautamshrinivas/spring-petclinic.git',
              branch: "${params.BRACH_TO_BUILD}"
                }
                           }
           stage ('build') {
            steps {
              sh "${params.MAVEN_GOAL}"
                 }
            }
            stage ('artifactory') {
             steps {
               rtMavenDeployer (
                    id: "MAVEN_DEPLOYER",
                    serverId: "jfrog123",
                    releaseRepo: "chandu-libs-release-local",
                    snapshotRepo: "chandu-libs-snapshot-local"
                )
             }
            }
            stage ('Exec Maven') {
            steps {
                rtMavenRun (
                    tool: "mvn3", // Tool name from Jenkins configuration
                    pom: 'pom.xml',
                    goals: 'clean install',
                    deployerId: "MAVEN_DEPLOYER"
                )
            }
        }
         stage ('Publish build info') {
            steps {
                rtPublishBuildInfo (
                    serverId: "jfrog123"
                )
            }
        }
       }
      post  {
        always {
            echo 'Job completed'
            mail subject: 'result',
                    body: 'Build Completed',
                  to: 'chandushine70@gmail.com'
        }
        failure {
            mail subject: 'Build Failed',
                  body: 'Build Failed',
                  to: 'chandushine70@gmail.com'
        }
        success {
            junit '**/surefire-reports/*.xml'
            archive '**/target/*.jar'
        }
       }
}